@using Data
@inject NavigationManager navigation
@inject HttpClient http
@inject IJSRuntime js


<EditForm Model="Comercio" OnValidSubmit="@EnviarFormComercio">

    <h2>Informações do Comércio</h2>
    <div class="hr-line-dashed"></div>
    <br />

    <form class="form-horizontal">

        <div class="form-group">
            <label class="col-md-2 control-label required">Nome:</label>

            <div class="col-lg-4">
                <TextEdit @bind-Text="Comercio.NOME_COMERCIO"></TextEdit>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label required">CEP:</label>
            <div class="col-sm-4">
                <InputText @bind-Value="Comercio.Endereco.cep" class="form-control" id="CEP" maxlength="8" placeholder="00000-000" autocomplete="off" @onkeyup="MascaraCEP" @onfocusout="PesquisaViaCep"></InputText>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label required">Logradouro:</label>
            <div class="col-sm-4">
                <InputText @bind-Value="Comercio.Endereco.logradouro" class="form-control"></InputText>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label required">Número:</label>
            <div class="col-sm-2">
                <InputText @bind-Value="Comercio.Numero" class="form-control"></InputText>
            </div>

            <label class="col-sm-2 control-label">Complemento:</label>
            <div class="col-sm-2">
                <InputText @bind-Value="Comercio.Endereco.complemento" class="form-control" style="text-transform:uppercase"></InputText>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label required">Bairro:</label>
            <div class="col-sm-4">
                <InputText @bind-Value="Comercio.Endereco.bairro" class="form-control"></InputText>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label required">Cidade:</label>
            <div class="col-sm-4">
                <InputText @bind-Value="Comercio.Endereco.localidade" class="form-control"></InputText>
            </div>

            <label class="col-sm-2 control-label required" form="ESTADO"> Estado: </label>
            <div class="col-sm-2">
                <InputText @bind-Value="Comercio.Endereco.uf" class="form-control" maxlength="2" autocomplete="off" style="text-transform:uppercase" />
            </div>
        </div>



    </form>

    
        <br />
        <div class="hr-line-dashed"></div>

        <div class="col-lg-12" style="text-align: right;">
            <button type="button" class="btn btn-secondary" @onclick="@(() => navigation.NavigateTo("Comercio"))"> @ButtonTextCancelar</button>
            <button type="submit" class="btn btn-primary">  @ButtonTextSubmit </button>
        </div>

</EditForm>




@code {

    [Parameter]
    public Comercio Comercio { get; set; }


    [Parameter]
    public string ButtonTextCancelar { get; set; }

    [Parameter]
    public string ButtonTextSubmit { get; set; }

    [Parameter]
    public EventCallback EnviarFormComercio{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        Comercio.Endereco = new Endereco();
    }


    public async Task MascaraCEP(KeyboardEventArgs e)
    {
        char.TryParse(e.Key, out char tecla);

        if (char.IsLetter(tecla))
        {
            await js.InvokeVoidAsync("LimparCampo", "CEP");
        }
        else
        {
            await js.InvokeVoidAsync("MascaraCEP", "CEP");
        }
    }

    private async Task PesquisaViaCep()
    {
        Comercio.Endereco = await http.GetJsonAsync<Endereco>("https://viacep.com.br/ws/" + Comercio.Endereco.cep + "/json/");
        Comercio.CEP = Comercio.Endereco.cep;
        Comercio.Bairro = Comercio.Endereco.bairro;
        Comercio.UF = Comercio.Endereco.uf;
        Comercio.Localidade = Comercio.Endereco.localidade;
        Comercio.logradouro = Comercio.Endereco.logradouro;


        StateHasChanged();
    }
}